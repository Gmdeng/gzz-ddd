package com.gzz.retail.application;
/**
 * 对应六边形架构的输入适配器
 * 
 * 应用层 同时也对应了Clean Architecture 中的Application Business Rule。
 *
 * 客户端代码存放的地方，负责组装调用领域模型，仓库，控制事务，对应六边形架构的应用服务层
 *
 * 从项目实践中，它作为{{粗粒度}}业务的入口。（也称这为一个Use Case）。
 * 这一层中不应该包含复杂的业务规则。
 * 而是对Domain层进行协调。
 * <p>
 * dto 存放对上层暴露服务所接受的参数类型。
 * service {{粗粒度}} 的服务接口
 * util
 * <p>
 * 相对于领域层，应用层是很薄的一层，应用层定义了软件要完成任务，要尽量简单，
 * 它不包含任务业务规则或知识，为下一层领域对象协助任务、委托工作。
 * 它没有反映业务情况的状态，但它可以具有反映用户或程序的某个任务的进展状态。
 * <p>
 * 对外 为展现层提供各种应用功能（service）
 * 对内 调用领域层（领域对象或领域服务）完成各种业务逻辑任务（task）。
 * 这一层也很适合写一些任务处理，日志监控。
 *
 * 用来封装业务逻辑
 * 面向用例。
 * 粗粒度。
 * 外部视图看系统。
 * 一个请求对应一个方法。
 * 服务之间不相互调用。
 * 职责一般包括：跨模块协调、DTO转换、事务AOP、权限AOP、日志AOP、异常AOP、邮件、消息队列。
 */